{"version":3,"sources":["340452.png","thisistheone.glb","App.js","reportWebVitals.js","index.js"],"names":["Model","props","scene","useGLTF","facemodel","object","position","Loader","progress","useProgress","Html","center","App","onClick","console","log","className","style","height","background","pixelRatio","camera","fov","intensity","fallback","Environment","preset","OrbitControls","autoRotate","autoRotateSpeed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,I,eCAA,MAA0B,yC,QCezC,SAASA,EAAMC,GACb,IAAQC,EAAUC,YAAQC,GAAlBF,MACT,OACG,2BAAWG,OAAQH,EAAOI,SAAU,CAAC,EAAE,EAAE,KAI7C,SAASC,IACP,IAAQC,EAAaC,cAAbD,SACR,OAAO,eAACE,EAAA,EAAD,CAAMC,QAAM,EAAZ,UAAcH,EAAd,eAGM,SAASI,IACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEC,QAAS,kBAAMC,QAAQC,IAAI,UAC3BC,UAAU,cACVC,MAAO,CACLC,OAAQ,QACRC,WAAW,qPAEbC,WAAY,CAAC,EAAG,GAChBC,OAAQ,CAAEf,SAAU,CAAC,EAAG,EAAG,IAAKgB,IAAK,IARvC,UAUE,8BAAcC,UAAW,KAGzB,eAAC,WAAD,CAAUC,SAAU,cAACjB,EAAD,IAApB,UACE,cAACP,EAAD,IACA,cAACyB,EAAA,EAAD,CAAaC,OAAQ,cAEvB,cAACC,EAAA,EAAD,CAAeC,YAAc,EAAMC,gBAAmB,SC/C9D,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC7B,EAAD,MAEF8B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b8480a47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/340452.2f7b53cf.png\";","export default __webpack_public_path__ + \"static/media/thisistheone.4d7cf101.glb\";","import React, { Suspense, useRef } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport {\n  OrbitControls,\n  ContactShadows,\n  Environment,\n  useGLTF,\n  Detailed,\n} from \"@react-three/drei\";\nimport background from \"./340452.png\";\nimport { Html, useProgress } from \"@react-three/drei\";\n\nimport facemodel from \"./thisistheone.glb\";\n\nfunction Model(props) {\n  const { scene } = useGLTF(facemodel);\n return(\n    <primitive object={scene} position={[0,0,0]} />\n  )\n}\n\nfunction Loader() {\n  const { progress } = useProgress();\n  return <Html center>{progress} % loaded</Html>;\n}\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Canvas\n        onClick={() => console.log(\"click\")}\n        className=\"canvasstyle\"\n        style={{\n          height: \"100vh\",\n          background: `no-repeat center/100% 100% url(\"https://lh3.googleusercontent.com/proxy/bdGa1NUkXeojFlpl2U0j8dasLIVUUVMCkwBbgRR6q0KrVTTPJsA-26jOceQHMdVRuGwGl2EsLQNYyFepWyfT-EYoF-XIQfqdfaBZ8pJmctkXRhgLl1sMLXt22F9JDlokLhZaSnnGT6bTUSyJ-Bj1kuDvKOvu9tzgXq-CsMM\")`,\n        }}\n        pixelRatio={[1, 2]}\n        camera={{ position: [0, 0, 10], fov: 30}}\n      >\n        <ambientLight intensity={0.3} />\n        {/* <spotLight intensity={1} position={[20, 50, 100]} color={\"lightyellow\"}   aoMapIntensity={1} /> */}\n        {/* <pointLight intensity={1} position={[5, 5, 5]} decay={1} distance={300} shadow={1} color={\"lightyellow\"} /> */}\n        <Suspense fallback={<Loader />}>\n          <Model/>\n          <Environment preset={'sunset'}/>\n        </Suspense>\n        <OrbitControls autoRotate = {true} autoRotateSpeed = {5} />\n       \n      </Canvas>\n    </HashRouter>\n  );\n}\n\n// import React, { Suspense } from \"react\";\n// import { Canvas } from \"react-three-fiber\";\n// import facemodel from \"../src/fulltestsize.glb\"\n// import reactmodel from \"../src/react3dd.glb\"\n// import { OrbitControls, useGLTF, Plane, useAnimations, } from \"@react-three/drei\";\n// import { HashRouter, Route, Switch } from \"react-router-dom\";\n// import background from \"./340452.png\"\n\n// function Model(props) {\n//   const { scene } = useGLTF(facemodel);\n//   return <primitive object={scene}/>;\n// }\n\n// export default function App() {\n\n//   return (\n//     <HashRouter>\n//     <Canvas  onClick={() => console.log(\"click\")}  className=\"canvasstyle\" style={{height:\"100vh\", background: `no-repeat center/100% 100% url(${background})`}}pixelRatio={[1, 2]} camera={{ position: [-2, 0, 5], fov: 35 }}>\n//       <ambientLight intensity={0.8}  />\n//       {/* <spotLight intensity={2} position={[20, 50, 100]} color={\"lightyellow\"}   aoMapIntensity={1} /> */}\n//       {/* <pointLight intensity={2} position={[5, 5, 5]} decay={1} distance={300} shadow={1} color={\"lightyellow\"} /> */}\n//       <Suspense fallback={null} >\n//         <Model />\n\n//       </Suspense>\n//       <OrbitControls />\n//     </Canvas>\n//     </HashRouter>\n//   );\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}