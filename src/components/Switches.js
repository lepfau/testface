/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import switchesmodel from "../assets/switches.gltf"

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(switchesmodel)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (props.first === true)
    {
      actions["Premier"].repetitions = 1;
      actions["Premier"].clampWhenFinished = true;
      actions["Premier"].reset().fadeIn().play();
    } else actions["Premier"].fadeOut();

    if (props.second === true)
    {
      actions["Second"].repetitions = 1;
      actions["Second"].clampWhenFinished = true;
      actions["Second"].reset().fadeIn(0.5).play();
    } else actions["Second"].fadeOut();

    if (props.third === true)
    {
      actions["Third"].repetitions = 1;
      actions["Third"].clampWhenFinished = true;
      actions["Third"].reset().fadeIn(0.5).play();
    } else actions["Third"].fadeOut();

    if (props.fourth === true)
    {
      actions["Fourth"].repetitions = 1;
      actions["Fourth"].clampWhenFinished = true;
      actions["Fourth"].reset().fadeIn(0.5).play();
    } else actions["Fourth"].fadeOut();


  })


  return (
    <group ref={group} {...props} dispose={null} scale={0.2}  
    rotation={[0, 4.7, 0]} position={[-0.9, -1.8, 0]}>
      <mesh
        geometry={nodes.Torus.geometry}
        material={nodes.Torus.material}
        position={[0, 0, 2]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        geometry={nodes.Torus001.geometry}
        material={nodes.Torus001.material}
        position={[0, 0, 2]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={0.7}
      />
      <mesh onClick={() => props.firstSwitch()} style={{cursor: "pointer"}}
        name="Sphere"
        geometry={nodes.Sphere.geometry}
        material={nodes.Sphere.material}
        position={[0, 0, 2]}
        rotation={[0, 0, -0.82]}
        scale={0.61}
      />
      <mesh geometry={nodes.Cube.geometry} material={materials['Material.003']} position={[-1.05, 0, 0]} />
      <mesh
        geometry={nodes.Torus002.geometry}
        material={nodes.Torus002.material}
        position={[0, 0, -2.21]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        geometry={nodes.Torus003.geometry}
        material={nodes.Torus003.material}
        position={[0, 0, -2.21]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={0.7}
      />
      <mesh onClick={() => props.secondSwitch()}
        name="Sphere001"
        geometry={nodes.Sphere001.geometry}
        material={nodes.Sphere001.material}
        position={[0, 0, -2.21]}
        rotation={[0, 0, -0.77]}
        scale={0.61}
      />
      <mesh
        geometry={nodes.Torus004.geometry}
        material={nodes.Torus004.material}
        position={[0, 0, -6.64]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        geometry={nodes.Torus005.geometry}
        material={nodes.Torus005.material}
        position={[0, 0, -6.64]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={0.7}
      />
      <mesh onClick={() => props.thirdSwitch()}
        name="Sphere002"
        geometry={nodes.Sphere002.geometry}
        material={nodes.Sphere002.material}
        position={[0, 0, -6.64]}
        rotation={[0, 0, -0.76]}
        scale={0.61}
      />
      <mesh
        geometry={nodes.Torus006.geometry}
        material={nodes.Torus006.material}
        position={[0, 0, -11.15]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <mesh
        geometry={nodes.Torus007.geometry}
        material={nodes.Torus007.material}
        position={[0, 0, -11.15]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={0.7}
      /> 
      <mesh onClick={() => props.fourthSwitch()} 
        name="Sphere003"
        geometry={nodes.Sphere003.geometry}
        material={nodes.Sphere003.material}
        position={[0, 0, -11.15]}
        rotation={[0, 0, -0.76]}
        scale={0.61}
      />
      <group position={[0.58, -2.79, 2.98]} scale={0.67}>
        <mesh geometry={nodes.Cube_1.geometry} material={nodes.Cube_1.material} />
        <mesh geometry={nodes.Cube_2.geometry} material={nodes.Cube_2.material} />
      </group>
      <mesh
        geometry={nodes.Text.geometry}
        material={nodes.Text.material}
        position={[0.05, -2.92, 3.12]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.49}
      />
      <group position={[0.58, -2.79, -1.27]} scale={0.67}>
        <mesh geometry={nodes.Cube002_1.geometry} material={nodes.Cube002_1.material} />
        <mesh geometry={nodes.Cube002_2.geometry} material={nodes.Cube002_2.material} />
      </group>
      <mesh
        geometry={nodes.Text001.geometry}
        material={nodes.Text001.material}
        position={[0.05, -2.92, -1.53]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.49}
      />
      <group position={[0.58, -2.79, -5.78]} scale={0.67}>
        <mesh geometry={nodes.Cube003_1.geometry} material={nodes.Cube003_1.material} />
        <mesh geometry={nodes.Cube003_2.geometry} material={nodes.Cube003_2.material} />
      </group>
      <mesh
        geometry={nodes.Text002.geometry}
        material={nodes.Text002.material}
        position={[0.05, -2.92, -5.63]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.49}
      />
      <group position={[0.58, -2.79, -10.27]} scale={0.67}>
        <mesh geometry={nodes.Cube004_1.geometry} material={nodes.Cube004_1.material} />
        <mesh geometry={nodes.Cube004_2.geometry} material={nodes.Cube004_2.material} />
      </group>
      <mesh
        geometry={nodes.Text003.geometry}
        material={nodes.Text003.material}
        position={[0.05, -2.92, -10.49]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.49}
      />
    </group>
  )
}

useGLTF.preload(switchesmodel)
