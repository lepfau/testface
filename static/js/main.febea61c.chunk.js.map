{"version":3,"sources":["stoptoday.gltf","App.js","reportWebVitals.js","index.js"],"names":["Model","props","scene","useGLTF","facemodel","object","App","style","height","backgroundColor","pixelRatio","camera","position","fov","intensity","fallback","OrbitControls","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAAe,MAA0B,uC,gCCMzC,SAASA,EAAMC,GACb,IAAQC,EAAUC,YAAQC,EAAW,eAA7BF,MAER,OAAO,2BAAWG,OAAQH,IAGb,SAASI,IAGtB,OACE,cAAC,IAAD,UACA,eAAC,IAAD,CAAQC,MAAO,CAACC,OAAO,QAASC,gBAAgB,SAASC,WAAY,CAAC,EAAG,GAAIC,OAAQ,CAAEC,SAAU,EAAE,EAAG,EAAG,GAAIC,IAAK,IAAlH,UACE,8BAAcC,UAAW,IAGzB,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,cAACf,EAAD,MAEF,cAACgB,EAAA,EAAD,SCxBN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtB,EAAD,MAEFuB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.febea61c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stoptoday.0e3984bb.gltf\";","import React, { Suspense } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport facemodel from \"../src/stoptoday.gltf\"\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nfunction Model(props) {\n  const { scene } = useGLTF(facemodel, '/draco-gltf');\n  \n  return <primitive object={scene} />;\n}\n\nexport default function App() {\n\n  \n  return (\n    <HashRouter>\n    <Canvas style={{height:\"100vh\", backgroundColor:\"black\"}}pixelRatio={[1, 2]} camera={{ position: [-2, 0, 5], fov: 50 }}>\n      <ambientLight intensity={1}  />\n      {/* <spotLight intensity={2} position={[20, 50, 100]} color={\"lightyellow\"}   aoMapIntensity={1} /> */}\n      {/* <pointLight intensity={2} position={[5, 5, 5]} decay={1} distance={300} shadow={1} color={\"lightyellow\"} /> */}\n      <Suspense fallback={null}>\n        <Model />\n      </Suspense>\n      <OrbitControls />\n    </Canvas>\n    </HashRouter>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}